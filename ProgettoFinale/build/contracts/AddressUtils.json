{
  "contractName": "AddressUtils",
  "abi": [],
  "bytecode": "0x604c6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820b25421b3c7b4fe1a239c01eab922c169557ea336e1e9dcf6c1fa0264bcf6b0bc0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820b25421b3c7b4fe1a239c01eab922c169557ea336e1e9dcf6c1fa0264bcf6b0bc0029",
  "sourceMap": "91:789:3:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "91:789:3:-;;;;;;;;",
  "source": "pragma solidity ^0.5.6;\n\n/**\n * @dev Utility library of inline functions on addresses.\n */\nlibrary AddressUtils\n{\n\n  /**\n   * @dev Returns whether the target address is a contract.\n   * @param _addr Address to check.\n   * @return True if _addr is a contract, false if not.\n   */\n  function isContract(\n    address _addr\n  )\n    internal\n    view\n    returns (bool addressCheck)\n  {\n    uint256 size;\n\n    /**\n     * XXX Currently there is no better way to check if there is a contract in an address than to\n     * check the size of the code at that address.\n     * See https://ethereum.stackexchange.com/a/14016/36603 for more details about how this works.\n     * TODO: Check this again before the Serenity release, because all addresses will be\n     * contracts then.\n     */\n    assembly { size := extcodesize(_addr) } // solhint-disable-line\n    addressCheck = size > 0;\n  }\n\n}\n",
  "sourcePath": "/Users/simone/Desktop/fusion/contracts/address-utils.sol",
  "ast": {
    "absolutePath": "/Users/simone/Desktop/fusion/contracts/address-utils.sol",
    "exportedSymbols": {
      "AddressUtils": [
        785
      ]
    },
    "id": 786,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 766,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Utility library of inline functions on addresses.",
        "fullyImplemented": true,
        "id": 785,
        "linearizedBaseContracts": [
          785
        ],
        "name": "AddressUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "380:497:3",
              "statements": [
                {
                  "assignments": [
                    774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 774,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 783,
                      "src": "386:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 773,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "386:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 775,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "386:12:3"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 774,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "792:4:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_addr": {
                        "declaration": 768,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "812:5:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 776,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(_addr)\n}",
                  "src": "781:80:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "addressCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "849:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 778,
                        "name": "size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "864:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "871:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "864:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "849:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "849:23:3"
                }
              ]
            },
            "documentation": "@dev Returns whether the target address is a contract.\n@param _addr Address to check.\n@return True if _addr is a contract, false if not.",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "306:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "300:23:3"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 771,
                  "name": "addressCheck",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "359:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:19:3"
            },
            "scope": 785,
            "src": "281:596:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 786,
        "src": "91:789:3"
      }
    ],
    "src": "0:881:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/simone/Desktop/fusion/contracts/address-utils.sol",
    "exportedSymbols": {
      "AddressUtils": [
        785
      ]
    },
    "id": 786,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 766,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Utility library of inline functions on addresses.",
        "fullyImplemented": true,
        "id": 785,
        "linearizedBaseContracts": [
          785
        ],
        "name": "AddressUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "380:497:3",
              "statements": [
                {
                  "assignments": [
                    774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 774,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 783,
                      "src": "386:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 773,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "386:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 775,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "386:12:3"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 774,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "792:4:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_addr": {
                        "declaration": 768,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "812:5:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 776,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(_addr)\n}",
                  "src": "781:80:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "addressCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "849:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 778,
                        "name": "size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "864:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "871:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "864:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "849:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "849:23:3"
                }
              ]
            },
            "documentation": "@dev Returns whether the target address is a contract.\n@param _addr Address to check.\n@return True if _addr is a contract, false if not.",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "306:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "300:23:3"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 771,
                  "name": "addressCheck",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "359:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:19:3"
            },
            "scope": 785,
            "src": "281:596:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 786,
        "src": "91:789:3"
      }
    ],
    "src": "0:881:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0-beta.2",
  "updatedAt": "2019-04-26T08:19:07.369Z",
  "devdoc": {
    "details": "Utility library of inline functions on addresses.",
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}